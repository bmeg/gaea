# The name of the active server database backend
# Available backends: boltdb, dynamodb, elastic, mongodb
Database: boltdb

# The name of the active compute backend
# Available backends: local, htcondor, slurm, pbs, gridengine, manual, aws-batch
Compute: local

# The name of the active event writer backend(s).
# Available backends: log, boltdb, dynamodb, elastic, mongodb, kafka
EventWriters: 
  - boltdb
  - kafka
  - log

Logger:
  # Logging levels: debug, info, error
  Level: info
  # Write logs to this path. If empty, logs are written to stderr.
  OutputFile: ""

Server:
  # Hostname of the Funnel server.
  HostName: localhost

  # Port used for HTTP communication and the web dashboard.
  HTTPPort: 19191

  # Port used for RPC communication.
  RPCPort: 8888

  # Require basic authentication for the server APIs using a password.
  # If used, make sure to properly restrict access to the config file
  # (e.g. chmod 600 funnel.config.yml)
  # User: funnel
  # Password: abc123

  # Include a "Cache-Control: no-store" HTTP header in Get/List responses
  # to prevent caching by intermediary services.
  DisableHTTPCache: true

  # RPC client connection timeout.
  RPCClientTimeout: 60s

  # The maximum number of times that a request will be retried for failures.
  # Time between retries follows an exponential backoff starting at 5 seconds
  # up to 1 minute
  RPCClientMaxRetries: 10


# The scheduler is used for the Manual compute backend. 
Scheduler:
  # How often to run a scheduler iteration.
  ScheduleRate: 1s
  # How many tasks to schedule in one iteration.
  ScheduleChunk: 10
  # How long to wait between updates before marking a node dead.
  NodePingTimeout: 1m
  # How long to wait for a node to start, before marking the node dead.
  NodeInitTimeout: 5m

Node:
  # If empty, a node ID will be automatically generated.
  ID: ""

  # If the node has been idle for longer than the timeout, it will shut down.
  # -1 means there is no timeout. 0 means timeout immediately after the first task.
  Timeout: -1s

  # A Node will automatically try to detect what resources are available to it. 
  # Defining Resources in the Node configuration overrides this behavior.
  Resources:
    # CPUs available.
    # Cpus: 0

    # RAM available, in GB.
    # RamGb: 0.0

    # Disk space available, in GB.
    # DiskGb: 0.0

  # For low-level tuning.
  # How often to sync with the Funnel server.
  UpdateRate: 5s

Worker:
  # Files created during processing will be written in this directory.
  WorkDir: ./funnel-work-dir

  # For low-level tuning.
  # How often to poll for cancel signals
  PollingRate: 5s

  # For low-level tuning.
  # How often to send stdout/err task log updates to the Funnel server.
  # Setting this to 0 will result in these fields being updated a single time
  # after the executor exits.
  LogUpdateRate: 5s

  # Max bytes to store for stdout/err in the task log.
  LogTailSize: 10000 # 10 KB

  # Normally the worker deletes its working directory after executing.
  # This option disables that behavior.
  LeaveWorkDir: false

#-------------------------------------------------------------------------------
# Databases and/or Event Writers/Handlers
#-------------------------------------------------------------------------------

BoltDB:
  # Path to the database file
  Path: ./funnel-work-dir/funnel.db

Kafka:
  Servers:
    - "localhost:9092"
  Topic: funnel


# Local file system.
LocalStorage:
  # Whitelist of local directory paths which Funnel is allowed to access.
  AllowedDirs:
    - ./

